packages:
  - !include substitutions.yaml
  - !include modules/logger.yaml # Disabilitare dopo aver provato per un certo periodo che tutto funzioni
  # - !include modules/wifi.yaml # Disabilitato per ora, utilizzo ethernet
  - !include modules/ethernet.yaml # Configurazione Ethernet W5500
  - !include modules/modbus.yaml # Fondamentale per comunicare con il dispositivo tramite ModBus
  - !include blocks/Blk0_SystemIdentification.yaml
  - !include blocks/Blk1_MachineState.yaml
  - !include blocks/Blk2_MachineParameters.yaml
  - !include blocks/Blk3_Commands.yaml
  - !include blocks/Blk4_UserTimerProgram.yaml
  - !include blocks/Blk8_TimeAndDay.yaml
  # - !include modules/climate.yaml # Disattivato perché attualmente poco personalizzabile
  # - !include modules/buzzer.yaml # Abilitare in caso di utilizzo del buzzer
  # - !include modules/digital_input.yaml # Abilitare in caso di utilizzo di ingressi digitali
  # - !include modules/led.yaml # Abilitare in caso di utilizzo del led di stato  
  # - !include modules/relais.yaml # Abilitare in caso di utilizzo dei relè
  - !include modules/rtc.yaml # Abilitare in caso si voglia utilizzare il chip RTC

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  comment: ${device_description}
  min_version: 2025.5.0
  name_add_mac_suffix: false
  includes:
    - modbus_helpers.h

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: recommended
  flash_size: 16MB
  # Configurazione PSRAM per ESP32-S3
psram:
  mode: octal
  speed: 80MHz

# -- API per l'integrazione con Home Assistant --
api:
  encryption:
    key: !secret api_encryption_key
  on_client_connected:
    then:
      - lambda: |-
          ESP_LOGD("rtc_sync", "Client HA connesso");
  on_client_disconnected:
    then:
      - lambda: |-
          ESP_LOGD("rtc_sync", "Client HA disconnesso");

# -- Abilita gli aggiornamenti Over-the-Air (OTA) --
ota:
  - platform: esphome
    password: !secret ota_password

# -- Configurazione I2C per RTC e chip di espansione --
i2c:
  scl: GPIO41
  sda: GPIO42
  scan: true
  frequency: 100kHz  # Frequenza standard per DS3231

# -- Dispositivo I2C DS3231 --
i2c_device:
  - id: ds3231_i2c
    address: 0x68

# -- Pulsanti di controllo --
button:
  - platform: restart
    name: "Riavvia ESP"
    id: restart_button

# -- Configurazione sensori --
sensor:

  # Uptime del sistema
  - platform: uptime
    name: "Uptime"
    update_interval: 60s
    entity_category: diagnostic